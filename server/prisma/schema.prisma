// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mongodb"
    url      = "mongodb+srv://giaphong:iH8dmbRbeKnht2gs@databasedamh.acc9voi.mongodb.net/databasedamh?retryWrites=true&w=majority"
}

model User {
    id String @id @default(auto()) @map("_id") @db.ObjectId
    username String @unique
    email String @unique
    salt String
    password String
    cart Cart?
    sessions Session[]
}
model FoodImage {
    id String @id @default(auto()) @map("_id") @db.ObjectId
    url String
    filename String
    foodId String @unique
    food UploadFood @relation(fields: [foodId], references: [id], onDelete: Cascade)
}
model UploadFood {
    id String @id @default(auto()) @map("_id") @db.ObjectId
    title String
    price String
    category String
    averageRating String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    foodImage FoodImage?
}
model OrderedFood {
    id String @id @default(auto()) @map("_id") @db.ObjectId
    title String
    price String
    quantity String @default("1")
    description String?
    cartId String
    cart Cart @relation(fields: [cartId], references: [id], onDelete: Cascade)
}
model Cart {
    id String @id @default(auto()) @map("_id") @db.ObjectId
    userId String @unique
    user User @relation(fields: [userId], references: [id], onDelete: Cascade)
    orderedFoods OrderedFood[]
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}
model Session {
    id String @id @default(auto()) @map("_id") @db.ObjectId
    user User @relation(fields: [userId], references: [id])
    userId String
    valid Boolean @default(true)
    userAgent String
}